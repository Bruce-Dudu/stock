# -*- coding: utf-8 -*-
"""
Created on Wed May 23 11:41:59 2018
目标：把欧奈尔CANSLIM量化出来，配合一些技术指标，最终实现自动化交易
C=当季每股收益：对于一支股票来说，C值越高越好。要与去年同期相比，EPS增长大于18%-20%比较理想。同时，当季销售量应该增加至少25%。要避免被偶尔的非经常性收益所左右。真正的每股收益增长，必须依赖销售收入的增长。
A=每股收益年度增长率：找出每股收益真正增长的潜力股。股市上表现最好的股票在过去几年ROE至少达到17%。投资者应该寻找那些年度每股现金流比实际每股收益至少高出20%的成长型股票。
N=新产品、新管理阶层、股价新高：选择怎样的入市时机。对于所谓新，一般小散的我们很难深入了解，只能借助研究员的报告和新闻。寻找那些推出新的产品与服务，更新管理高层或所在行业环境显著向好的公司。
S=供给与需求：股票发行量何大额交易需求量。买股票要买大股本的，流动性好的，也就是成交量不低于2000万的（针对最近的A股瞌睡行情）。还有负债比率越低，表示这家公司财务状况越好，越安全，注意那些过去两三年内负债比率连续下降的股票。
L=市场领导股还是落后股：选择哪一种股票。这个不用多说，只选行业龙头股，也就是排名第一的股票。比如白色家电的美的格力，安防的海康威视，通信的中兴通信，保险的中国平安，航空的南方航空，银行的招商银行，AI的科大讯飞等。龙头股是经常变动的，不同时期可能不大一样，这就要时刻保持盘面的敏感性，从板块整个去考虑。
    利用股价相对强度（RS）来判断龙头股还是落后股。作者倾向买入RS高于80的强势股。
I=机构投资者的认同：跟随领导者。分析机构投资者的质量，看基金的表现。注意那些
    1）至少由几家优秀的机构投资者持有的股票，
    2）最近几个季度内持有某股票的机构投资者数量明显增多
M=市场走向：如何判断大盘走势。在CAN SLIM原则中，其实这条应该列在首位。大势不好，即便买到好的股票也赚不了大钱。在确实牛市的时候买入股票，就像是猪站上了风口，再差的股票也会上涨。熊市中买入股票，大概率是赔钱的。逆势而为，无异于刀头舔血。
    判断市场走势的方法：
    
    1）如果市场上股价低迷、业绩很差的股票渐呈强势，就意味着涨势即将结束。低质量股开始占据大盘热门股地位时，是空头市场出现的主要标志。
    
    2）连板股（昨日涨停板）：连板股代表着当前市场的活跃程度以及赚钱效应，题材的延续性，是市场信心的一个重要体现。
    
    3）涨跌家数：代表着市场的情绪
    
    4）真实涨跌幅榜：跌停超过20家代表市场极度弱势，此时就不要参与了
    
    5）下跌通道家数：如果处于下跌趋势股票慢慢增多，并多于上涨，说明市场不适合多数人参与
杯柄结构突破买入法
带柄茶杯结构目的是为了消化前高套牢盘，在前高附近次高点横盘洗盘整理蓄势，为突破前高做好准备。 此图形由于酷似一只带手柄的杯子而被投资者称之为“带柄杯状图”。

大概整个构建这个结构的流程是：一、股价先向下运动，形成杯子的左半边；二、止跌企稳，形成杯子的底部；三、股价开始向上运动，形成杯子的右半边；四、股价开始停止上升，走一段时间的回调行情，形成杯子的柄；五、股价恢复上升，放量突破中心点。

首先，需要明确一点：前提是在上升趋势的个股中，选择类似的走势。日线周线都可以，但最好需要配合其他指标（如放量，MACD底背离，突破均线密集区）来提高成功率

@author: Adu
"""

import os
import win32com.client
from win32com.client import *
import pandas as pd
import numpy as np
import random
xlApp = win32com.client.Dispatch("Excel.Application")

def yjbb():
    cwd = os.getcwd()
    excel_path = os.path.join(cwd,"欧奈尔系统.xlsm")#cwd + "\主力资金当日.xlsm")#'F:\baiduyundownload\主力资金当日.xlsm'
    #print (cwd)
    df = pd.read_excel(excel_path,sheet_name=3,header = 0,index_col=[0,1],dtype=object )#("历年收益")
    df=pd.DataFrame(df)
    
    pd.to_numeric(df['2018-03-31每股收益','2018-03-31营收同比'],errors='coerce')
    
    

        
    #df.replace({'-':0})
    
    #df['2018-03-31每股收益']=df2['2018-03-31每股收益'].map(lambda x:0 if x=='-')
    
    print(df.dtypes)
    #df["2018-03-31每股收益"，"2018-03-31营收同比"] = df["2018-03-31每股收益"，"2018-03-31营收同比"].astype(float)#数据转换为float
    #print(df['2018-03-31每股收益'])
    df["total"] = df["2018-03-31每股收益"] + df["2018-03-31营收同比"] 
    print(df["total"])

yjbb()














'''
    df[[('2015-12-31每股收益',
        '2016-12-31每股收益',
        '2017-12-31每股收益',
        '2017-03-31净利同比',
        '2017-03-31净利环比',
        '2017-06-30净利同比',
        '2017-06-30净利环比',
        '2017-09-30净利同比',
        '2017-09-30净利环比',
        '2017-12-31净利同比',
        '2017-12-31净利环比',
        '2018-03-31净利同比',
        '2018-03-31净利环比',
        '2018-03-31每股收益',
        '2018-03-31营业收入(万元)',
        '2018-03-31营收同比',
        '2018-03-31净资产收益率',
        '2018-03-31每股经营现金流量')
        ]] = df[[(
        '2015-12-31每股收益',
        '2016-12-31每股收益',
        '2017-12-31每股收益',
        '2017-03-31净利同比',
        '2017-03-31净利环比',
        '2017-06-30净利同比',
        '2017-06-30净利环比',
        '2017-09-30净利同比',
        '2017-09-30净利环比',
        '2017-12-31净利同比',
        '2017-12-31净利环比',
        '2018-03-31净利同比',
        '2018-03-31净利环比',
        '2018-03-31每股收益',
        '2018-03-31营业收入(万元)',
        '2018-03-31营收同比',
        '2018-03-31净资产收益率',
        '2018-03-31每股经营现金流量')]].apply(pd.to_numeric,errors='coerce')
        
 '''       